plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.mooo.devforin'
version = '1.0.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(18)
    }
}

configurations {
    all {
        exclude group: "commons-logging", module: "commons-logging"
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

repositories {
    mavenLocal() 												// maven 로컬 캐시 저장소
    mavenCentral()												// maven 중앙 저장소
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // lucy
    implementation 'com.navercorp.lucy:lucy-xss-servlet:2.0.1'

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // jasypt
    implementation group: 'com.github.ulisesbocchio', name: 'jasypt-spring-boot', version: '3.0.5'

    // queryDSL
    implementation("com.querydsl:querydsl-jpa:5.1.0:jakarta")
    implementation "com.querydsl:querydsl-core"
    implementation "com.querydsl:querydsl-collections"
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    // java.lang.NoClassDefFoundError(jakarta.persistence.Entity) 발생 대응
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // util
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.1'
    implementation "org.apache.commons:commons-lang3:3.12.0"
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'org.json:json:20231013'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    runtimeOnly 'org.postgresql:postgresql'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.batch:spring-batch-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    // Excel
    implementation 'org.apache.poi:poi:5.2.3'
    implementation 'org.apache.poi:poi-ooxml:5.2.3'
    implementation 'org.apache.commons:commons-collections4:4.4'
}


def querydslDir = "src/main/generated/"
sourceSets {
    main.java.srcDir querydslDir
}

tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory = file(querydslDir)  // 수정된 부분
}


